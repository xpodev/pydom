def generate_typing_overrides(root_folder):
    from pathlib import Path

    html_element_props_relative_path = Path("pydom/types/html/html_element_props.pyi")
    html_element_props_content = f"""\
# This file is generated by {Path(__file__).name}

from typing_extensions import TypedDict, Literal
from pydom.types.html.aria_props import AriaProps
from pydom.types.html.html_element import HTMLElement
from pydom.types.html.html_event_props import HTMLEventProps

SwapValues = Literal[
    "innerHTML",
    "outerHTML",
    "textContent",
    "beforebegin",
    "afterbegin",
    "beforeend",
    "afterend",
    "delete",
    "none",
]
TargetValues = Literal[
    "this",
    "closest ",
    "find ",
    "next",
    "next ",
    "previous",
    "previous ",
]
EventValues = Literal[
    "click",
    "submit",
    "change",
    # non-standard
    "load",
    "revealed",
    "intersect",
]
ParamsValues = Literal[
    "*",
    "none",
    "not ",
]

class HTMXProps(TypedDict, total=False):
    hx_get: str
    hx_post: str
    hx_get: str
    hx_post: str
    hx_push_url: str | Literal["true", "false"]
    hx_select: str
    hx_select_oob: str
    hx_swap: SwapValues | str
    hx_swap_oob: Literal[True] | SwapValues | str
    hx_target: TargetValues | str
    hx_trigger: EventValues | str
    hx_vals: str
    hx_boost: Literal[True, "true", "false"]
    hx_confirm: str
    hx_delete: str
    hx_disable: Literal[True]
    hx_disabled_elt: TargetValues | str
    hx_disinherit: str
    hx_encoding: str
    hx_ext: str
    hx_headers: str
    hx_history: Literal["false"]
    hx_history_elt: Literal[True]
    hx_include: TargetValues | str
    hx_indicator: TargetValues | str
    hx_inherit: str
    hx_params: ParamsValues | str
    hx_patch: str
    hx_preserve: Literal[True]
    hx_prompt: str
    hx_put: str
    hx_replace_url: Literal["true", "false"] | str
    hx_request: str
    hx_sync: str
    hx_validate: Literal["true", True]
    hx_vars: str

    hx_on_htmx_abort: str
    hx_on_htmx_after_on_load: str
    hx_on_htmx_after_process_node: str
    hx_on_htmx_after_request: str
    hx_on_htmx_after_settle: str
    hx_on_htmx_after_swap: str
    hx_on_htmx_before_cleanup_element: str
    hx_on_htmx_before_on_load: str
    hx_on_htmx_before_process_node: str
    hx_on_htmx_before_request: str
    hx_on_htmx_before_swap: str
    hx_on_htmx_before_send: str
    hx_on_htmx_config_request: str
    hx_on_htmx_confirm: str
    hx_on_htmx_history_cache_error: str
    hx_on_htmx_history_cache_miss: str
    hx_on_htmx_history_cache_miss_error: str
    hx_on_htmx_history_cache_miss_load: str
    hx_on_htmx_history_restore: str
    hx_on_htmx_before_history_save: str
    hx_on_htmx_load: str
    hx_on_htmx_no_sse_source_error: str
    hx_on_htmx_on_load_error: str
    hx_on_htmx_oob_after_swap: str
    hx_on_htmx_oob_before_swap: str
    hx_on_htmx_oob_error_no_target: str
    hx_on_htmx_prompt: str
    hx_on_htmx_pushed_into_history: str
    hx_on_htmx_response_error: str
    hx_on_htmx_send_error: str
    hx_on_htmx_sse_error: str
    hx_on_htmx_sse_open: str
    hx_on_htmx_swap_error: str
    hx_on_htmx_target_error: str
    hx_on_htmx_timeout: str
    hx_on_htmx_validation__validate: str
    hx_on_htmx_validation__failed: str
    hx_on_htmx_validation__halted: str
    hx_on_htmx_xhr__abort: str
    hx_on_htmx_xhr__loadend: str
    hx_on_htmx_xhr__loadstart: str
    hx_on_htmx_xhr__progress: str

    hx_on__abort: str
    hx_on__after_on_load: str
    hx_on__after_process_node: str
    hx_on__after_request: str
    hx_on__after_settle: str
    hx_on__after_swap: str
    hx_on__before_cleanup_element: str
    hx_on__before_on_load: str
    hx_on__before_process_node: str
    hx_on__before_request: str
    hx_on__before_swap: str
    hx_on__before_send: str
    hx_on__config_request: str
    hx_on__confirm: str
    hx_on__history_cache_error: str
    hx_on__history_cache_miss: str
    hx_on__history_cache_miss_error: str
    hx_on__history_cache_miss_load: str
    hx_on__history_restore: str
    hx_on__before_history_save: str
    hx_on__load: str
    hx_on__no_sse_source_error: str
    hx_on__on_load_error: str
    hx_on__oob_after_swap: str
    hx_on__oob_before_swap: str
    hx_on__oob_error_no_target: str
    hx_on__prompt: str
    hx_on__pushed_into_history: str
    hx_on__response_error: str
    hx_on__send_error: str
    hx_on__sse_error: str
    hx_on__sse_open: str
    hx_on__swap_error: str
    hx_on__target_error: str
    hx_on__timeout: str
    hx_on__validation__validate: str
    hx_on__validation__failed: str
    hx_on__validation__halted: str
    hx_on__xhr__abort: str
    hx_on__xhr__loadend: str
    hx_on__xhr__loadstart: str
    hx_on__xhr__progress: str

    hx_on_abort: str
    hx_on_auto_complete: str
    hx_on_auto_complete_error: str
    hx_on_blur: str
    hx_on_cancel: str
    hx_on_can_play: str
    hx_on_can_play_through: str
    hx_on_change: str
    hx_on_click: str
    hx_on_close: str
    hx_on_context_menu: str
    hx_on_cue_change: str
    hx_on_dbl_click: str
    hx_on_drag: str
    hx_on_drag_end: str
    hx_on_drag_enter: str
    hx_on_drag_leave: str
    hx_on_drag_over: str
    hx_on_drag_start: str
    hx_on_drop: str
    hx_on_duration_change: str
    hx_on_emptied: str
    hx_on_ended: str
    hx_on_error: str
    hx_on_focus: str
    hx_on_input: str
    hx_on_invalid: str
    hx_on_key_down: str
    hx_on_key_press: str
    hx_on_key_up: str
    hx_on_load: str
    hx_on_loaded_data: str
    hx_on_loaded_metadata: str
    hx_on_load_start: str
    hx_on_mouse_down: str
    hx_on_mouse_enter: str
    hx_on_mouse_leave: str
    hx_on_mouse_move: str
    hx_on_mouse_out: str
    hx_on_mouse_over: str
    hx_on_mouse_up: str
    hx_on_mouse_wheel: str
    hx_on_pause: str
    hx_on_play: str
    hx_on_playing: str
    hx_on_progress: str
    hx_on_rate_change: str
    hx_on_reset: str
    hx_on_resize: str
    hx_on_scroll: str
    hx_on_seeked: str
    hx_on_seeking: str
    hx_on_select: str
    hx_on_show: str
    hx_on_sort: str
    hx_on_stalled: str
    hx_on_submit: str
    hx_on_suspend: str
    hx_on_time_update: str
    hx_on_toggle: str
    hx_on_volume_change: str
    hx_on_waiting: str


class HTMXSSE(TypedDict, total=False):
    sse_connect: str
    sse_swap: str
    sse_close: str

HTMXClassToolsExtensionAction = Literal["add", "remove", "toggle"]

class HTMXClassToolsExtension(TypedDict, total=False):
    hx_classes: HTMXClassToolsExtensionAction | str
    data_classes: HTMXClassToolsExtensionAction | str
    apply_parent_classes: HTMXClassToolsExtensionAction | str
    data_apply_parent_classes: HTMXClassToolsExtensionAction | str

# Add more extensions here

class HTMXExtensions(
    HTMXSSE,
    HTMXClassToolsExtension,
    # Add more extensions here
):
    pass


# fmt:off
class HTMLElementProps(
    HTMLElement, AriaProps, HTMLEventProps,
    HTMXProps, HTMXExtensions,
):
    pass
# fmt:on

    """

    html_element_props_file = Path(root_folder) / html_element_props_relative_path
    html_element_props_file.parent.mkdir(parents=True, exist_ok=True)
    html_element_props_file.write_text(html_element_props_content)


if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser()
    parser.add_argument(
        "typings_root_folder",
        help="The root folder of the typings",
    )
    args = parser.parse_args()

    generate_typing_overrides(args.typings_root_folder)
